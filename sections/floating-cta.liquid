{{ 'component-floating-cta.css' | asset_url | stylesheet_tag }}

<div class="floating-cta-container">
  {%- if section.settings.enable_floating_cta -%}
    <floating-cta>
      <aside
        class="floating-cta floating-cta--{{ section.settings.position }}"
        style="--floating-cta-color: {{ section.settings.cta_color }};"
        data-floating-cta
      >
        <button
          type="button"
          aria-label="Close Pop Up"
          class="floating-cta__close"
          data-floating-cta-close
          onclick="this.closest('floating-cta').close()"
          aria-label="{{ 'accessibility.close' | t }}"
        >
          <span class="visually-hidden">Close</span>
          <span class="icon icon-tiny">{% render 'icon-close' %}</span>
        </button>

        <svg xmlns="http://www.w3.org/2000/svg" width="251" height="296" viewBox="0 0 251 296" fill="none">
          <path d="M250.765 91.5551C249.303 86.8063 244.257 87.8652 240.56 86.8739C240.16 86.7663 239.724 86.8013 239.308 86.7413C217.501 83.6259 195.709 80.3853 173.875 77.474C168.25 76.7242 164.995 74.117 162.544 69.009C152.529 48.1376 142.172 27.4314 131.876 6.69647C130.425 3.77635 129.46 -0.161363 125.252 0.00510773C121.475 0.154055 120.545 3.83518 119.182 6.58132C109.451 26.1935 99.414 45.6693 90.3117 65.5745C86.5787 73.7353 81.298 76.9783 72.6987 78.0422C51.0406 80.7195 29.4874 84.2542 7.90549 87.526C4.89635 87.9829 1.14211 87.7714 0.153621 91.6841C-0.728777 95.1812 2.39019 96.891 4.41085 98.8773C21.1914 115.373 37.9956 131.847 54.8922 148.224C58.1747 151.406 59.7523 154.684 58.8212 159.424C57.0789 168.301 55.832 177.275 54.3331 186.202C51.6834 201.984 49 217.76 46.2442 234.055C46.1369 239.104 49.659 240.942 55.1868 238.048C64.9805 232.92 74.803 227.843 84.6005 222.72C84.7702 232.646 84.266 242.581 83.8067 252.547C83.446 260.408 81.3692 265.751 74.4885 269.272C73.0307 270.019 71.5966 271.052 70.5283 272.28C67.2046 276.101 63.6937 280.274 65.9416 285.68C68.1931 291.097 71.7839 295.205 78.531 295.861C87.9516 296.774 96.5097 292.941 105.512 291.661C112.501 290.67 116.404 286.094 115.473 277.837C114.417 268.469 113.651 258.863 114.521 249.527C115.906 234.687 117.342 219.884 117.741 205C123.976 201.963 129.201 202.597 135.249 205.908C136.255 206.459 137.266 206.999 138.273 207.548C138.011 229.638 139.993 251.807 140.486 271.947C140.877 287.795 142.497 289.87 157.104 293.956C166.989 296.721 175.474 293.881 178.725 286.72C182.558 278.282 179.715 269.065 171.244 263.404C168.868 261.816 168.576 259.755 168.311 257.326C167.065 245.878 166.771 234.394 166.858 222.898C175.783 227.63 184.723 232.335 193.663 237.037C196.473 238.514 199.494 241.325 202.899 238.466C206.019 235.848 204.724 232.315 204.156 229.016C200.226 206.193 196.424 183.347 192.298 160.559C191.323 155.177 192.73 151.449 196.638 147.706C213.035 131.994 229.218 116.056 245.362 100.081C247.768 97.7008 252.055 95.7532 250.762 91.5539L250.765 91.5551Z" fill="#EFBDFC"/>
        </svg>

        <a href="{{ section.settings.cta_url }}" class="floating-cta__link">
          {{ section.settings.cta_text }}
        </a>
      </aside>
    </floating-cta>
  {%- endif -%}
</div>

<script>
  class FloatingCta extends HTMLElement {
      constructor() {
          super();
          this.closeButton = this.querySelector('[data-floating-cta-close]');
          this.ctaElement = this.querySelector('[data-floating-cta]');
          this.isVisible = false;
          this.scrollThreshold = {{ section.settings.scroll_threshold }}; // pixels to scroll before showing

          this.init();
      }

      init() {
          // Set up scroll listener
          this.handleScroll = this.handleScroll.bind(this);
          window.addEventListener('scroll', this.handleScroll, { passive: true });

          // Check initial scroll position
          this.handleScroll();
      }

      handleScroll() {
          const scrollY = window.scrollY || window.pageYOffset;

          if (scrollY >= this.scrollThreshold && !this.isVisible) {
              this.showCta();
          } else if (scrollY < this.scrollThreshold && this.isVisible) {
              this.hideCta();
          }
      }

      showCta() {
          if (this.ctaElement && !this.isVisible) {
              this.ctaElement.classList.add('is-showing');
              this.isVisible = true;
          }
      }

      hideCta() {
          if (this.ctaElement && this.isVisible) {
              this.ctaElement.classList.remove('is-showing');
              this.isVisible = false;
          }
      }

      close() {
          this.style.display = 'none';
      }

      disconnectedCallback() {
          window.removeEventListener('scroll', this.handleScroll);
      }
  }

  customElements.define('floating-cta', FloatingCta);
</script>

{% schema %}
{
  "name": "Floating CTA",
  "settings": [
    {
      "type": "header",
      "content": "General Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_floating_cta",
      "label": "Enable Floating CTA",
      "default": false,
      "info": "Turn on/off the floating call-to-action button"
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "cta_text",
      "label": "CTA Text",
      "default": "Shop Now",
      "info": "Text displayed on the floating button"
    },
    {
      "type": "url",
      "id": "cta_url",
      "label": "CTA Link",
      "info": "URL the button links to"
    },
    {
      "type": "header",
      "content": "Appearance"
    },
    {
      "type": "color",
      "id": "cta_color",
      "label": "Button Color",
      "default": "#000000",
      "info": "Background color of the floating button"
    },
    {
      "type": "header",
      "content": "Position"
    },
    {
      "type": "select",
      "id": "position",
      "label": "Button Position",
      "options": [
        {
          "value": "right",
          "label": "Bottom Right"
        },
        {
          "value": "left",
          "label": "Bottom Left"
        }
      ],
      "default": "right",
      "info": "Choose which side of the screen the button appears on"
    },
    {
      "type": "header",
      "content": "Scroll Threshold"
    },
    {
      "type": "number",
      "id": "scroll_threshold",
      "label": "Scroll Threshold",
      "default": 500,
      "info": "The number of pixels to scroll before the button appears"
    }
  ],
  "presets": [
    {
      "name": "Floating CTA",
      "category": "Marketing"
    }
  ]
}
{% endschema %}
